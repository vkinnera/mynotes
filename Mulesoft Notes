What is difference between function and variable in DW?
we cant pass input parameter  in variable but in function we can pass input parameter
what is traits and datatypes in mulesoft
resource is a collection of traits and data types
traits - headers, uriparams and queryParams are defined in traits
datatypes
 datatypes define structure of body it can define request or response like http status code
 200, 400 , 500 etc

what is difference between for each parallel for each and batch processing

for each process is single threaded and it process the records one by one and parallel for 
each is multi threaded and it process multiple records at the same time in parallel way

batch processing process the multiple records at the same time and it contains batch step - 
it contains processors and aggregators batch job and On complete stage

processors process the records based on accept policy and aggregrator combine the records.

in On Complete we do the meta data processing 

what is implementation URL
when we deploy mule application jar in cloud hub it generates one URL that is our implementation 
URL.
we use this URL with basepath to call an API.

to remove non funtional requirement 	(apply policy , SLA ) we can create proxy url on 
top of implementaion URL.

API auto discovery?
to connect the application deployed in mule runtime with API manager.
In cloud hub deployment we  have api manage where we apply policies and non functional requirements
In mule runtime where we deploy mule application code
if we want to connect application deployed in mule runtime we need auto discovery.
request - gateway - API Manager ( check and full fill policy and SLA )  if it is full fill it will go to
API Implementation in mule runtime.
API manager has this client Id enforcement.

difference  between v core and worker
v core is a unit of worker
worker is a smallest unit where we can deploy our mule application
0.1 vcore - 500 mb heap memory
0.2 vcore - 1gb heap memory
1 vcore - 2gb heap memory

MUNIT
Assert Operations
Assert: validate mule event content
equals
expression
that
mock when
mock event processor when it matches the defined name and attributes
spy
what happens when befor and after event process is called
verify
verify if the process is called
Fail
allow you to fail test case on purpose
behavior 
see all conditions before executing test logic.
mock and spy goes into this condition
execution 
meant for testing the logic which will wait for all the processess 	to get completed 
before executing the next scope
runs flow through this section	 
validation
assert and verify comes here to validate and verify the flow

allows you to set payload attributes and variables
normally defined at the beginning of the m unit test to define the first message to the 
set
 you can define many properties
 what is pluck function and map function and mapObject?
 pluck function iterates over an object returns array of keys values and indices. - key value index
 map function iterates over an Array returns array - index, value
 mapObject iterates over an Object returns Object - key value index
 What is distinctBy?
 Iterates over an input and returns unique elements in it.
 What is joinBy function in Dataweave?
 merges an array into a single string value and uses the provided string as a separator between
 each item in the list.
 
 what is domain project?
 domain project is common mule project where we can keep all common mule resource 	which can be 
 used by multiple mule project which can be deployed in same runtime.
 
 we cant use domain project for cloud hub deployment model	since in cloud hub we deploy more than one
 project within same runtime that is worker.
 
 so it can be used only used in Onpremise deployment model.
 
 
why skipNullOn is used?
to skip all the null values from the respose

what is reduce function in dw?
Applies a reduction expression to the elements in an array.



API LIFE CYCLE?
--> create RAML - RESTFUL API MODELLING LANGUAGE  - we provide resource, input, output, datatype
-> 	Publish RAML to exchange
-> Review RAML and getting the feedback
-> if positive - build stage else go to design stage ie., RAML 
-> In build stage we do the API development.
-> After development of API we do the testing stage - MUNIT testing
->  we will secure API's applying policy like client id enforcement, ratelimiting etc
-> After deploying in cloudHub -> 	we should moniter application in cloudHub 
--> troubleshooting - bugs and then managing the API's


Available timezones for datatime converstion?
java!java::util::TimeZone::getAvailableIDs()

CICD or how do deploy
code - write scripts regarding  the jenkins file - it will take that code from the repo
build the code - after build it deploy on server.

once code is checkin it will deployed on server or if we need to deploy in UAT OR QA after code checkin 
we need approval and after approval we will deploy into the server.

devops teams writes pipeline scripts and we will deploy the code in jenkins by using the jenkins file.

what are the policies that you ave worked on?

Ratelimiting(throttling) - rate limiting is used to control the number of api call 
we can call the external system and the external system has some limit if the more than 
limited req will come then we will get out of memory as error message.
Spike control (throttling)- It is similar to rate limiting but we define the size of queue what ever the size
of queue if the size of queue is completed we will take another queue.

basic auth - 
client Id enforcement - 
JWT token - 
Oauth - 
HTTP Caching - 


how to call subflow file using dataweave
file - readURL
flow - lookUp


how to call configure properties in dw
p('propertyname')

when we use VM connector flow, where do we use
to use VM queue provided from the mulesoft.

Rate limiting is the way where we limit the number of request from the user side 
429 limit exceeded.

throtlling
maximum number of reqests that can be processed with in a given time frame the excess request can be 	
can be managed, cancelled or processed in some other way
we use mule cache component first time we call from the external system then we will get the
response from cache.

--------------------RAML------------------------------- 
title 
baseUri 
/resource: 
  method  
 
 
Data Type can be referred using "!include" keyword  from fragments 
Library is a collection of dataTypes -- library should be imported using "usage" keyword(by creating an object in it) and it is referred 
Example can be referred using "!include" keyword  from fragments 
Traits is used for headers and queryParameters -- Traits should be imported using "Traits" keyword(by creating key: !include filePath) and it is referred using "is" keyword with these[]( is:[headersname,.....,...] 

------------------------------------------------------------------------- 
For properties files 
Syntax- 
http.port=8081 
To read from properties file - ${http.port} 
when we clicked on fx(dataweave) - Mule::P('http.port') 


For Yaml files 
Syntax- 
http: 
   port: "8081" 
 
To read from properties file - ${http.port} 
when we clicked on fx(dataweave) - Mule::P('http.port') 

 
Secure properties generator for encrypting secure password 
In global elements create new Secure properties configuration for decrypting the key 
when using Secure properties configuration 
To read from properties file - ${secure::http.port} 

when we clicked on fx(dataweave) - Mule::P('secure::http.port') 

parallel ForEach - o/p- the output of this scope is the collection of the results of each route and the aggregated results will be in the same order they were, prior to the split. 
for each - o/p same orginal payload it doesnt modify the payload 
batch processing- Summary report 
scatter gather- an aggregated response of the routes 

watermarking-- to avoid duplicate data processing   

  

i have worked on a api called Post refund in which we have used api led connectivity structure 
in these we have three layers 
redmound ux as experience layers 
payment management biz as process layer 
aria management sys as a system layer 
in this we get inputs from frontend called fastgo payments 

From the frontend we get required inputs like business id, payment id, targetSystem which are passed into the ux, 
In ux we do the validations for inputs and later it is routed to the biz layer using request connector. 

In payement management biz depending upon the business id and target system we will route it to the sys layer 

aria management system is connected to the backend and retrive the data, 
in this we mapped using transform message and created a request to the backend to get the account no and details which is required for refund 
after getting the acc details we have done the validations for date. 

after the validations are done and again we mapped with the account details and payement id using transform message and created request to the backend 
now the refund is done from the backend and we get response like "refund is Intiated". 

transform message takes the request message and transformed into required mule format. 

SOAP - simple object access protocol 

REST - Representational state transfer 

It is a XML based protocol for accessing web services and it is platform independent and language independent. 

SOAP uses WSDL file and Rest uses RAML OR SWAGGER FILE. 

MAP and MAP object 

map fun is used to go through the element in array - to process multiple record in JSON array 

mapObject is to go through keys and values in each of the objects of the array - to process multiple object in record(array) 
total feilds 

transform message takes the request message and transformed into required mule format.
SOAP - simple object access protocol
REST - Representational state transfer
It is a XML based protocol for accessing web services and it is platform independent and language independent.
SOAP uses WSDL file and Rest uses RAML OR SWAGGER FILE.
MAP and MAP object
map fun is used to go through the element in array - to process multiple record in JSON array
mapObject is to go through keys and values in each of the objects of the array - to process multiple object in record(array)

connector in MULE?
connector is used to connect with the external system. it can be file, FTP, SFTP, DB connector.

what is transform message?
transform mule component transform message coverts from one format to another format with the help of mule expression.

What is SOAP?
SOAP is a Simple Object Access protocal - it is as XML based protocol for accessing the web services. SOAP is W3C 
recommandations for communication between applications. it is a platform independent and language independent.
SOAP is protocol and Rest is a architecture
Soap contains WSDL file and rest contains RAML.

Difference between map and mapObject?
map is used to go through multiple objects in an array and mapObject goes through multiple objects.
MAP function takes the input as an array and in mapObject takes input as an object

parallel for we manage the threads
batchprocessing process based on vcore

if there is any failure in particular system in scatter gather component then we use try block and on error continue
the retrive the value 
payload.0.payload
payload.1.payload	

XA transsaction participate in (JMS DB)
NON XA transaction(file, FTP, SFTP, HTTP)

senario:I have a input payload before for each 1,2,3. I have done addition like payload + 10. what is payload of for each
ANS: 
foreach
payload after and before for each - same
Variable after and before for each - changes(what ever we will configure in last loop )
parallel for each
payload after and before parallel for each - changes(collection of all payload in parallel for each)
variable after and before for each - same

the variable created inside the parallel for each will not exists after parallel for each
if I had two tables where i wanted to retrive data 	which are not dependent on each other. Then how  to handle it.
use scatter gather  and create two branch to call DB table.
POST:/accounts/{accountNo}/rollbackBasicPlan

capgemini:

basic Auth:
we provide the user id and password to the client to access an API.

client Id enforcement
It is generally used for ux api's to secure our API's from different vendors.

each vendor has their own set of client Id and client secret.
 
 what is JWT token/Oath in mulesoft?
 
 generally we use these token in ux api's. they provide robust security.
 We need third party like Oath , it is like handshaking process. we will call the third party and they will provide the JWT token 
 and we will use thay third party to use our API.
when ever we will configure out JWT token they will use their private key and we will use their public key to encrpt that
 particular token and we will see that paricular token is valid or not. if the token is not valid we will throw error message
 if it valid token allow them to call our API.

 it used to securly trasmit information between the parties as a JSON object. 
 This information can be verified and trusted because it is digitally signed. 
 JWTs are commonly used for authentication and authorization purposes.
 
 
HTTP CACHING
http caching is checked in the gate way level only. it checks the whether the api contains caching or not if it presents 
it will continue the flow.

difference b/w ratelimiting and throtelling?
ratelimiting limits the number of req's and trotking caches the req's. it handles the overwehming req's adjust the load based on input requests.

what are error handling components?
on error continue:
it ill handle error and throw 200 as response and continue to next flow
on error propagate
it ill handle error and throw 500 error
raise error
raise error is used to handle custom errors or to create manual error or business error

what is vertical scaling vs horizantal scaling?
vertical scaling - increasing number of v cores
it ill handle more number of requests and bigger size payload
horizantal scaling - increasing number of workers


what is thread pool and auto tuning?
It is a collection of threads and that will created based on number of v core and size of memory
Auto tuning increases the number of v core based on input requests.
what is munit?
Using munit we can automate our testing process in mulesoft similar to junit in java.
Using munit we check our code coverage and we can handle error in munit.

what is parallel for each?
variable before parallel foreach and after parallel for each is same and payload before and after changes.

what is async scope?
when ever we want handle a component in a separate thread we will use the ASYNC scope.


traits:
for calling the external traits we will use is: [] keyword.A trait can have all kinds of attributes.
examples:
examples contain sample input request and sample output response.

how many types of deployment available in mule application?
cloudhub - runtime plane and management plane 
onpremise - runtime plane and management plane both will be managed by customer itself.
hybrid - it runtime is customer hosted and management plane will be mulesoft hosted.
RTF - docker and kubernates are inbuilt in RTF.

how many ways to deploy mule application?
we have multiple way
way1:
we will deploy mule applcation as a jar then go to the runtime plane and uplaod the jar.
way2:
through anypoint studio.
way3:
we deploy api using CICD pipeline.

where do we deploy 
we deploy our code through mule runtime in cloudHub.

what is choice router?
we can create multiple branch will based condition only one branch will be executed.

What is scatter gather?
scatter 

Munit testing?
code coverage and automating our testing process similar to JUNIT.

domain project?
it can be used in customer hosted domain project. we can use this domain. 
in domain project we can configure like common resources like common error handlers and global error handlers, property file
domain project is only used in on premise deployment model.

why we connot deploy our domain project mule application in cloud hub?
because if we create domain project in one worker another worker cannot use domain project.


security policy?
client ID enforcement
JWT token
Oath

API monitering?
how many request are coming and how many threads are consuming and how many memory usage are there which external system taking how much time.


project exaplanation?
this question is combination of API LED Architecture and API development lifecycle.


Oath ?
check internet
we get the Oath token from the customer by creating the Oath API where we configuring the input request payload with client id secret audience, grantType
  then we will get the access token and then we will give that access token to key Authorization, value - bearer to call our API.

we will make three call to send request to mule API.

how do we call API form differnt layers.?
generally we will call an API using HTTP requestor connector
form process to system and from experience to process layer 
generally we will call using HTTP requestor.
some time we develop connector like we create create for system layer and publish to exchange.
use that connector in process layer.

Object store ?
performance increases in Object strore.
In object store we value in the form of key value pair.

handle errors in batch processing?
In batch processing we store error message in batch step component.


distinctBy is used to remove all the duplicate values.


if there is three branch in scatter gather and one of the branch is throwing error we use try block to catch the error.
all the mule component placed in block.


payload.0.payload gives the first branch payload. in scatter gather.


Iam getting multiple similar requests from end users I have rate limiting policy as 100 requests per minute 
Idont want to keep waiting 	users I dont want to send request errors to users how to handle.
ans: cache scope

In batch processing we have 100 records and 10 records failed. I want to send failed records status to end user.
In batch processing error based records in one batch step and failed records in another batch step

what is RAML?
RAML - restful API modelling language. we create RAML for documentation work of our API
it has 
baseUri
Resource - in resouce we have resourcename, method used 
Request - in request we have Headers, Queryparams, body, URI PARAMS
Response - response payload
Underlying dataType - datatype for request and response like TEXT, JSON, XML and SO On

what is trait?
traits is reusable component where we can define headers, queryParams, URI params inside traits.

what is dataType?
It is a structuere / schema of request and response datatype
datType consists of schema of request and response payload.

what is resourceType?
resource is collection of traits and datTypes.

what is fragment?
fragment is a shared repo which can be used by multiple RAML's. like if we define traits inside RAML it ill used only on that
RAML and if we define in fragment we use that in multiple RAML's.

worker?
worker is the smallest unit of mule runtime where wew deploy our mule application.
we need atleast one worker to deploy mule application.

vcore is the capacity of worker.

v core(veritical scaling) or worker(horizantal scaling) is the way to increase the capacity of application

deployment strategy
repository which repo we  are using
continuous integration and continous deployment
when ever we commit our code then CICD will take our code build that code and deploy that code on mule runtime server.

once we done in local testing then we move into dev env by using the CICD script and move into dev to SIT.

TLS vs SSL
HTTP connector https protocal then we can secure our REST API using our ssl protocol
it can be two way SSL or one way
in one way who will API they need call your API key 
and our side we configure the public key.

In two way SSL, we will share the public key to calling system and calling will send their public their pubic key to
configure your http listener.


authentication and authorization?
Authentication user Id and password 
authorization 
you have permission to use those userId and password or not.


what is API manager and auto discovery?
when ever we want connect with mule runtime with API manager in cloud hub we use API auto discovery and the can configured in mule application.
once it configure API manager there we can configure policies.

where you will configure mule properties?

key value pairs

secure property
we can encrpt that particular property and then we place our value inside our property file.
what is target variable?
 if we keep target variable as payload in database connector then outcome of database is payload.
 if we set the target variable name then the payload value is assigned to target variable.
 it will reduce the space complexity of the xml if the set the payload in the target variable.	
 variable and payload is not safe


Async Scope:
we use the Async to call the subflow asychronously.
go for sysnc scope if and only if we want execute some logic that is independent form other flow.
the scope of async scope is stateless. Async scope never changes our payload and never initialize set variable in ASYNC Scope.
variable and payload is not safe

try:
try with the On error continue wont give the error, variable and payload.
but try with the On error propagate give the error, variable and payload.

until SuccessFul?
if a connector is failing then until successFul is used to retry until the connector executes successfully without any error.

it is good to keep until successful component in asynchronous flows	
it is not recommended to keep the until successful in synchronous flows like restAPI's.


SOAP SERVICE?
WSDL - web service description language that defines the soap service

match function:
Uses a Java regular expression (regex) to match a string and then separates it in
to capture groups. Returns the results in an array.


Instance Id in cloud hub/ what is auto discovery in mulesoft?
Instance Id is the one which will connect the application which was connected in the API
manager and the application running in the runtime. which is called Auto Discovery.

The process of allowing API manager application to discover the application is running in 
the runtime using Instance Id is known as AUTO discovery.

create 	auto discovery global element using API instance ID.
provide runtime bussiness group client_id
Organization bussiness group client_secret.

how to secure client Id and secret?
we can secure the client Id and secret by configuring the client Id and client secret
in mule-artifact.json file -> securePropertes.

We can Apply policies in the instance running in the runtime manager.

Basic Authentication policy?
In basic authentication policy we use username and password to secure an API.	


The API management is sitting as a API GATEWAY in between and validating against to the policy
that we applied if the policy met then it is sending the request to runtime manager instance.

if we wrong user Id and password it will give 501 unauthorized.

mule properies - property or yaml file in src/main/resources
create "configuration properites" in global elememt.
Use ${key} expression to extract the property from propety or YAML file.
Use Mule::p('key')  dataweave script to extract in DW.

configure host and port in properties file
http.port = 8081
http.host = localhost
db.uhub.port = 10211

configure host and port in YAML file
http:
	port: "8081"
http:
	host: "localhost"
db:
	uhub:
		port: "10211"
		host: "oracle"
		username: "dfsh909knfkn"
		password: "dih90unkd"
		service: "XE"
configure 
YAML file configuration is lite weight compared to properties file.
YAML file value configured in ""

${http.port}
Mule::p('http.port')

Mule properties - Secure configuration properties

properties management: 
externalizing properties from mule configuration helps us in better code management and need not touch 
applications on configurations properties changes.
1. create a property/YAML file
2. encrypt property values - choose 16 digit encryption key : abcde0123456789 and use algorithm and mode to encrpt password using above key.
3. create secure configuration property global element
4. Use ${secure::key} expression extract the property form the property file.
5 Use Mule::p('secure::key') dataweave script to extract in dataweave.

encrpted value will be like this
![SJCENXkNHvTFh6ldYFpgMQ==]
${secure::http.port}
${secure::db.uhub.password}

Mule::p('secure::http.host')

secure config properties can be accessed by runtime arguments.

ratelimiting SLA based policy:
Rate limiting and SLA based policy is a combination of ratelimiting and client Id enforcement.
based on client client id and secret we can define the number of requests allowed by a system.

client id and client on All API resources or specific API resources.

JSON and XML threat protection policy:
Application proceesing JSON and XML requests are susceptable to attacks characterized by unusal inflation of elements
and nested levels Attackers use recursive techniques to consume memory resources. Drastic swings in a size of application 
data often signal a security problem. JSON threat protection helps us to protect your applcations from such intrutions.


IP allow list and Ip block list policies:
IP allow list: The Ip allow list allows a list or a range of specified IP adressess access to a protected resource
when a match IP is found between a source IP (specified when configuring a policy) and list of individual IP's or 
range of Ip's

The IP allow list policy controls access to an  configured API form either a single Ip address or a range of IP address

IP block list policy:
IP block list policy retricts access to the protected resouce when a match is found between a souce IP(specified
when configuring a policy) and either a list of individual Ip's or a range of IP's.

IP block list policy controls access to a configured API end points form either a single Ip address or a range of IP address
configure to all API methods & resources
configure to specific API methods or resources


Auto mated policies across API's 
If want create a automated policy by default we use automated policy.
CROS origin resouce sharing 
It is use ful to allow the front end technologies to consume the services.

Header Injection and Header removal policy:
Adding and removing the inbound and outbound content headers.

Message logging policy:
we can inject the message logs like headers by using the message logging policy.

Oath Policy third party Providers?
Oath provider: Oath provider can be provided by mule runtime manager or third party app.

Details required for getting the Oath token is

clientId
client Secret
audience
grant Type

after providing above details we get the < access token along with the scope of access token
and expires in and type as bearer > as a response.

Once we apply Oath policy on top of our API then we need to provide the bearer token, enable 
JWT validation for Auth0 and then only we can consume our service.

AuthO is the JWT provider so we choose JWT validation
JWKS option only supported if the JWT Signing method was set to RSA
and cliend It is skipped in JWT configuration and audience claim should be validated and 
provided

Authorization as key and bearer <access token> as value in header section.

what is Proxy API's?
Proxy APIs is a wrapper on 	actual, we can go proxy API's in below scenarios.
when we would like to expose wrapper/proxy API on external services with our own API management.
when we would like to expose with different end points on our mule applications.	
when would like to apply set of other policies on same services.

it will create the runtime instance application as a proxy api on top of particular 
implementation URL then deploys application to runtime manager.


promote API from environment?
to create an API from environment to another environmnent.

how do we define root element in RAML?
xml:
	name: employee


how to define array in RAML?
type: array
items:
    type: object
what are fragments?
fragments are the reusable components of RAML. To make design and build of a resusable API even quicker and easier.

categorized into two types - local and global
and types of fragments are
Traits
ResourceType
Library
DataType
user documentation
Example
Annotation Type
Security Scheme

what is dataType?
its basically the structure/schema of input request and response.

What is library?
It is a collection of dataTypes in RAML.

How can we refer a library in RAML?
By using the uses: keyword we can refer the library.
uses:
  uhub-sapi-data-types: uhub-sapi-datatypes-library/uhub-sapi-datatypes-library.raml
and library document we use types: keyword to refer multiple datatypes.
usage:  Types for uho sapi
types:
  register-covid-case-request-type:
    type: object
    description: This type used to register and update covid case
    properties:

what is traits and how we refer or include traits in RAML ?
Traits are used to store common headers or queryParams or UriParams.
we can include / refer traits by using the traits: keyword.
traits:
  correlation-id-header:
and to include traits inside resource we use is:[correlation-id-header] keyword

what is security scheme fragment?
when ever we develop a REST service we apply the security on the top of REST service.

apply SSL certification either individually or mulesoft dedicated load balancer and
those services will be exposed as HTTPS services.
basic authentication
client Id enforcement
Oath security policies

traits are created for client id enforcement
securitySchemes:
  oauth2.0: !include <>
  
to inject the oauth2.0 to each resource we use securedBy: keyword.
securedBy: [oauth2.0]

GIT Commands:
git clone: Used to clone projects from repo's
git checkout: Used to checkout specific branch
git status: used to check changed files information
git add: To add changed files to check in list.
git commit -m "commit message" used to check commit added files of check list
git push: To push committed changes to the repository.



what are the fragements we have in RAML? under which fragment we can put client id and client secret?
RAML -> CREATE FRAGMENTS -> CREATE TRAITS -> HEADERS -> CLIENT ID AND CLIENT SECRET

SCENARIO:
We dont have error handling in neither global error handling or flow level how would you send error responses as 503etc to the client?
We can configure the status code in response section.

what is criteria for adding resource?
dont add more than 20 resouces to each RAML and resource name should be noun and plural.

challenges 	faced while using batch proceesing?
handle failed records and get the summary report.
for failed records we will add the one more batch step and handle the failed record there.

How API manager will know about deployed application in case you have to apply policy(API Auto discovery)?
when we deploy our api to cloud hub we need to configure the auto discovery.
request -> gateway -> Request to API manager -> API managers validate the poilcy -> respond to gateway -> gateway is success ->
it call to runtime manager.

how can we call process API from experience API?
HTTP requestor

API proxies?
when ever we want to put non functional requirement outside of the functional requirement we need api proxies.

what is filter in dw?
filter-> to filter array of Objects

what is filterObject in dataweave?
filter a single Object then use filterObject

what is cloud Hub worker?
A mule runtime instance deployed in cloud hub.(which runs in an EC2 instance)

what is Object store V2 service?
cloudhub hosted object store that is separate from the worker so that it survies restart.


what is DLB(Dedicated Load Balancer)
Also called as vanity domains. cloud hub dedicated load balancers are optional component of anypoint platform that
enables to routing external http and https traffic to multilple mule applications deployed to cloud bub in a virtual private 
cloud(VPC)

can cloudhub supports domain?can runtime fabric supports domain?
no

If I wanted cloudhub integrated with splunk/elk
custom log appender for the app(log 4j config)

what is cloudHub SLB?
Included for free for any cloudhub app deployment uses a mulesoft certificate and cannot support "vanity domains"

How can you connect or the external service provider?
Organiser
Top level one per customer link to external Identity provider(OpenId connect, SAML 2.0).
---------------------------------------------------------------------------------------------------------------------------------------
Interview Questions Youtube


API-led Connectivity:

Q. Explain API led architecture.

API led architecture model is one of the best practices specified by mulesoft in designing and developing APIs. It is widely used across the industry.We follow a 3 layered approach in API led architecture. i.e

1. System layer

2. Process layer

3. Experience layer

System layer: All APIS developed in the system layer are connected to external systems such as databases, third party APIs, salesforce systems to

fetch the data. We don't apply any business logic in this layer but send the data to the process layer.

Process layer: We apply the business logic required on the data. It acts as an intermediate layer between systems and the process layer. The Process API sends the response to the experience layer.

I

Experience layer: APIs are exposed to the clients such as mobile apps or web application. These APIs are just a wrapper for processor systems APIS.

Q. Why do you require more experience APIs rather than one for the same requirement? It depends on the business requirement, the no. of experience apis to be created.

Example1: The business team gave a requirement and there are two experience systems mobile app and web application which are consuming the experience API but mobile app requires less data when compared to the web applications. In that case we have to develop two diff exp APIs to fulfil the requirement.

Example2: The exp API is being consumed by a third party and internal systems. In this case, there is an extra policy applied when the api is being consumed by third party api but the same is not required in case of internal system. So we have to deploy two exp APIS.

It may not be mandatory all the time, it depends on the business requirement.

10.why to follow API led architecture?

Advantages:

1. It increases the reusability

2. Limited functionality will be affected when there is any break

3. Time to market will be faster in the long run

4. Easy to maintain.

Disadvantages:

Instead of one API we are developing 3 apis so it takes more time in the initial phases. As we are developing more no. of apis we require more vCores, it will increase the cost of maintenance.

Q. How to establish the communication b/n system, process and exp layers?

99% of the time http requests are used to establish communication and we can expose API as a connector and use that as a connector.

Q. Explain API lifecycle in Mule. I

Design, Implementation, Testing, Deploy and Monitor covers API lifecycle. Design In this phase, API specification is designed using

the feedback and make necessary changes if required. RAML in Design Centre and then publish to Exchange. Ask the business users to give Implementation In implementation phase, generate RAML based flows in Anypoint Studio and start implementing the code. Develop MUnits, apply

Testing In this phase, the QA team will extensively test the applications and raise bugs. Solve the bugs and ask the testing team to re-test.

security policies and test locally.

Deploy After successful testing, deploy the applications to the prod environment. Monitor In this phase, logs monitoring and troubleshooting happens.
------------------------------------------------------------------

Web Services | REST | SOAP | HTTP Methods & Status Response Codes

Web Services:

1. What is a web service?

API stands for Application Programming Interface. API is a piece of code that helps two different systems to communicate and

exchange data with each other.

Web Service is a piece of code that helps two different systems to communicate and exchange data with each other over the Internet. Two types of Web Services are available i.e. REST and SOAP

2. What is a REST web service?

REST stands for Restful State transfer. It follows the HTTP protocol which accepts JSON, XML, HTML, and text plain as inputs. REST uses RAML for documentation, it contains resources, request and response details, security schemes, and documentation.

3. What is a SOAP web service?

SOAP stands for Simple Object Access Protocol. It is an XML-based protocol that accepts XML data as the input. SOAP uses WSDL(Web Service Descriptive Language) for documentation, it contains resources, requests, and response details. SOAP is platform and language-independent.

4. What are the differences between REST and SOAP web services?

A

a) REST stands for Representational State Transfer and SOAP stands for Simple Object Access Protocol.

b) SOAP is a protocol whereas REST is an architectural pattern.

c) SOAP uses WSDL to define API whereas REST uses RAML

d) SOAP works with only XML data format whereas REST works with JSON, XML, HTML, and plain text.

e) SOAP needs more bandwidth than REST.

f) SOAP cannot make use of REST but REST can make use of SOAP or HTTP protocol.

g) SOAP uses services interfaces to expose business logic whereas REST uses URI.

h) SOAP defines its security whereas Rest inherits from underlying transport.

i) SOAP is less preferred over REST because of its complexity.
5. When to choose REST and when to choose SOAP?

REST is the more popular choice for modern web services due to its simplicity and flexibility. However, SOAP remains relevant for specific use cases requiring strong security and standardized communication.

6. What are query parameters?

Query parameters are used to filter, sort, and paginate the collection of a result. They are passed at the end of the URL after a question mark.

For example, accounts in active state. /accounts?status=active

7. What are URI parameters?

URI stands for Unique Resource Identifier. It is passed as a parameter in the URL and it identifies a unique instance of a

resource type. It should be a unique identifier. For example, customer ID to get the loan and account details of a customer. /{customerId)

8. What are the differences between query and URI parameters? When to choose what?

9 What are the different HTTP methods used?

Answer:

GET to fetch the available resources (200 status code)

POST to create a new resource(201)

to completely update a resource or create a new resource if it doesn't exist.

PUT

PATCH to partially update a resource

DELETE to delete a resource

It is not mandatory to follow the same as specified but it is the best practice and widely followed. It will avoid confusion for the consumer of APIS.

10. What is the difference between PUT and PATCH?

11. What is the difference between POST and PUT?

12. Explain some of the HTTP response codes used

Answer: HTTP response codes are used to indicate the status of a request made to a server. Here are some of the commonly used HTTP response codes and their meanings:

1xx informational response

2xx successful

3xx redirection

4xx client error

5xx server error

200 OK The request was successful, and the server returned the requested data.

201 Created The request was successful, and a new resource has been created on the server.

204 No Content The request was successful, but there is no data to return.

400 Bad Request 401 Unauthorised The request could not be understood or was missing the required parameters. The request requires authentication, and the user does not have valid credentials.

403 Forbidden The server understood the request, but the user is not allowed to access the requested resource.

404 Not Found The requested resource could not be found on the server.

409 a request conflict with the current state of the target resource

405 Method not allowed

415 Unsupported media type

429 Number of requests a client can send in a given period exceeded(Will get this error when rate limiting policy is used and the client exceeds limit)

500 Internal Server Error The server encountered an error while processing the request.

501 Not Implemented The server does not support the functionality required to fulfill the request.

502 Bad Gateway The server acting as a gateway or proxy received an invalid response from the upstream server.

503 Service Unavailable The server is currently unavailable, and the request cannot be completed at this time.

504 Gateway Timeout The server acting as a gateway or proxy did not receive a timely response from the upstream server.

------------------------------------------------------------------------
 Anypoint Studio | Connectors | Components | Scopes | Development
What are the differences between Mule 3 and Mule 4?

a) The project structure is mavenized by default in M4 but we have to manually do it in M3.

b) The message structure is changed in M4 when compared to M3. M4 has payload, attributes, and variables. M3 has payload, inbound properties, outbound properties, record variables, session variables, and flow variables.

c) M4 has a self-tuning runtime engine when compared to M3.

d) M4 has more robust error handling with on-error continue, on error propagate and raise error components.

e) Mule Expression Language in M3 is completely replaced with Dataweave 2.x in

M4.

f) Anypoint Studio 6.x works with M3 but Anypoint Studio 7.x works with M4.

g) Error handling is different robust in M4 compared to M3.

Q. Can you tell me which versions of Anypoint Studio and Mule Runtime you are compatible with?

I am currently using 7.12 and 4.2.2 versions of Anypoint Studio and Mule Runtime

Q. Can you tell me which versions of Anypoint Studio and Mule Runtime are the latest?

7.18 and 4.6 are the latest versions of Anypoint Studio and Mule Runtime

Q. What are the differences between flow, sub-flow, and private flow?

Flow contains source, process, and error handling. It can be exposed to consumers and work independently.

Private flow doesn't have a source but has its error handling. It can be called in synchronous or asynchronous mode.

Sub-flow contains only processes and it inherits process and error handling from the parent flow	

Q. Explain configuration of file, FTP, and SFTP?

1. File - Mention path

2. FTP - Host, port, username, password and path

3. SFTP - Host, port, username, password, path, authentication details and proxy details.

Note: 10 MB file will be handled by 0.1 vcore(500 MB). If it is not supported go for vertical scaling by increasing vCores.

Q. What operations have you used in FTP, File or SFTP connectors?

Read to read the file

List - to list the files in a directory

On new or update file to trigger the flow when there is a new file or update in the same file. It can be used in source.

Copy-copy the file content.

Move move file from one directory to another directory

Write to write the content to a new file.

Create directory - to create a new directory.

Q. What is fixed frequency and cron?

Time specified to poll at regular intervals is the fixed frequency. For example, 1000 ms

Frequency, start delay and time unit are the configurations for fixed frequency.

Cron-Cron is used to describe time and date information. The scheduler will check and whenever the cron expression matches then it will trigger the flow.

Expression and Time zone are required for configuring cron job. 
Q. How do you make sure another trigger will not be initiated by the Scheduler component till the previous trigger completes the process?

Configure disallowConcurrentExecution="true" as an attribute in the scheduler XML tag.

Q. Explain Reconnection Strategy.

A. Reconnection Strategy is used to connect to the corresponding system when there is a connection issue. We have three values in the dropdown - None, Standard and Forever. We should define frequency and attempts.

None - It is by default and no reconnect attempts will happen.

Standard - We can specify the number of attempts and frequency to reconnect.

Forever - It is rarely used and it continuously retries until it is connected.

Q. What is Until Successful?

The Until Successful scope executes processors within it, in order, until they all succeed or the scope exhausts the maximum number of retries. Until Successful runs synchronously. If any processor within the scope 
fails to connect or to produce a successful result, Until Successful retries all the processors within it, including the one that failed, until all configured retries are exhausted. If a retry succeeds, 
the scope proceeds to the next component. If the final retry does not succeed, Until Successful produces an error of type MULE:RETRY_EXHAUSTED

Q. What is the difference between reconnection strategy and until successful scope?

A. When the reconnection strategy is configured for any of the connectors, it will retry only when there is a connectivity error. But in case of until successful

scope, it will retry for every error type.

The number of retries and frequency for each retry can be configured in both.



